module.exports = {
  extends: [
    "eslint-config-airbnb-base",
    "eslint-config-airbnb-typescript/lib/shared",
    "./common",
  ].map(require.resolve),
  plugins: ["svelte3"],
  settings: {
    "svelte3/typescript": true,
    "svelte3/ignore-styles": ({ lang }) => !!lang,
  },
  rules: {
    // Allow extensionless imports from "$app/*"
    "import/extensions": [
      "warn",
      {
        ignorePackages: true,
        pattern: {
          js: "never",
          mjs: "never",
          jsx: "never",
          json: "always",
          svelte: "always",
        },
      },
    ],
  },
  overrides: [
    {
      files: ["src/routes/**/*.ts", "src/hooks.*.ts"],
      rules: {
        "import/prefer-default-export": "off", // SvelteKit Endpoints use named exports: `export const GET: RequestHandler = ...`,
        "@typescript-eslint/no-throw-literal": "off", // SvelteKit load function throw special errors to allow redirects and other specific http status like 404.
      },
    },
    {
      files: ["*.svelte"],
      processor: "svelte3/svelte3",
      rules: {
        "@typescript-eslint/no-unused-vars": "off", // is unable to detect $store as usage of store.
        "@typescript-eslint/no-unused-expressions": "off", // Doesn't detect reactive statements
        "import/first": "off", // autofix breaks code
        "import/no-duplicates": "off",
        "import/no-mutable-exports": "off", // this is how props are defined
        "import/no-unresolved": "off", // didn't detect the $lib & $app aliases
        "import/order": "off", // autofix breaks code
        "import/prefer-default-export": "off", // the default export is implicit (it's the component)
        "no-undef-init": "off", // `needed to specify an prop with a default value of undefined
        "prettier/prettier": "off", // incompatible, luckily the vscode extension already applies prettier formatting
      },
    },
  ],
};
